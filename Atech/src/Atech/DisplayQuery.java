/*    Atech
 *    Copyright (C) 2008  l & k
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation, either version 3 of the License, or
 *    (at your option) any later version.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * DisplayQuery.java
 *
 * Created on April 9, 2008, 10:10 PM
 */

package Atech;

import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  l
 */
public class DisplayQuery extends javax.swing.JInternalFrame {
    ResultSet rs;
    ResultSetMetaData rsm;
    
    Vector rowVector = new Vector();
    Vector columnHeaderVector = new Vector();
    
    DefaultTableModel dtm = new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int row,int col){
            return false;
        }
    };
    /** Creates new form DisplayQuery */
    public DisplayQuery(ResultSet rs,String title) {
        this.rs = rs;
        initComponents();
        initTable();
        this.setTitle(title);
        this.setFrameIcon(new ImageIcon(getClass().getResource("/LibAtech/AtechIcon.png")));
    }
    
    private void initTable(){
    
    try {
        
        rsm = rs.getMetaData();
        
        while (rs.next()) {
            Vector singleRow = new Vector();
            for (int x = 0; x < rsm.getColumnCount(); x++) {
                singleRow.addElement(rs.getObject(x + 1));
            }
            rowVector.addElement(singleRow);
        }
        for (int c = 1; c <= rsm.getColumnCount(); c++) {
            columnHeaderVector.addElement(rsm.getColumnName(c));
        }
        this.dtm.setDataVector(rowVector, columnHeaderVector);
        jTable.setModel(this.dtm);

    } catch (Exception e) {
        e.printStackTrace();
    }
    jTable.repaint();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables

}
